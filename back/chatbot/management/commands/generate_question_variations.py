from django.core.management.base import BaseCommand
from chatbot.models import KnowledgeBase, ChatbotSettings
import json
import random


class Command(BaseCommand):
    help = 'G√©n√®re automatiquement des variations de questions pour enrichir la base de connaissances'

    def add_arguments(self, parser):
        parser.add_argument(
            '--multiply',
            type=int,
            default=3,
            help='Nombre de variations √† cr√©er par question de base'
        )

    def handle(self, *args, **options):
        self.stdout.write('ü§ñ G√©n√©ration automatique de variations de questions...')
        
        multiply_factor = options['multiply']
        
        # Patterns de reformulation pour g√©n√©rer des variations naturelles
        question_patterns = {
            'what_is': [
                "C'est quoi {}?",
                "Qu'est-ce que c'est {}?", 
                "Expliquez-moi {}",
                "Dites-moi ce que c'est {}",
                "Parlez-moi de {}",
                "Je veux savoir sur {}",
                "Pouvez-vous m'expliquer {}?"
            ],
            'how_to': [
                "Comment faire pour {}?",
                "Comment je peux {}?",
                "Comment √ßa marche {}?",
                "Quelle est la proc√©dure pour {}?",
                "Comment on fait {}?",
                "Je veux savoir comment {}",
                "Aidez-moi √† {}"
            ],
            'can_i': [
                "Est-ce que je peux {}?",
                "C'est possible de {}?",
                "Je peux {}?",
                "Y a-t-il moyen de {}?",
                "Est-il possible de {}?",
                "Ai-je la possibilit√© de {}?"
            ],
            'greetings': [
                "Salut !",
                "Hey !",
                "Coucou !",
                "Bonjour !",
                "Hello !",
                "Bonsoir !",
                "Yo !",
                "Wesh !"
            ],
            'emotions_positive': [
                "C'est g√©nial !",
                "Super !",
                "Excellent !",
                "Parfait !",
                "Vous √™tes au top !",
                "Fantastique !",
                "Bravo !",
                "Incroyable !"
            ],
            'emotions_negative': [
                "C'est nul !",
                "√áa marche pas !",
                "Je suis √©nerv√© !",
                "C'est frustrant !",
                "J'en ai marre !",
                "√áa bug !",
                "C'est la gal√®re !",
                "J'y arrive pas !"
            ],
            'help': [
                "Aidez-moi !",
                "J'ai besoin d'aide !",
                "Je suis perdu !",
                "Pouvez-vous m'aider ?",
                "Je ne comprends pas !",
                "Help !",
                "Au secours !",
                "SOS !"
            ]
        }
        
        # Variations sp√©cifiques pour OREMI by AFG
        oremi_variations = [
            # Variations sur OREMI
            {
                'base_keywords': ['oremi', 'AFG'],
                'variations': [
                    "OREMI by AFG, c'est quoi exactement ?",
                    "Parlez-moi de l'app OREMI",
                    "Comment √ßa marche OREMI ?",
                    "OREMI AFG, qu'est-ce que √ßa fait ?",
                    "L'application d'AFG, elle sert √† quoi ?",
                    "Expliquez-moi OREMI by AFG"
                ]
            },
            # Variations sur les assurances
            {
                'base_keywords': ['assurance', 'souscrire'],
                'variations': [
                    "Quoi comme assurance vous avez ?",
                    "Je peux assurer quoi avec vous ?",
                    "Vous faites quoi comme assurance ?",
                    "C'est quoi vos produits d'assurance ?",
                    "Qu'est-ce que je peux assurer ?",
                    "Vos assurances, c'est quoi ?",
                    "Montrez-moi vos assurances"
                ]
            },
            # Variations sur le paiement
            {
                'base_keywords': ['paiement', 'payer'],
                'variations': [
                    "Je paie comment ?",
                    "C'est quoi les moyens de paiement ?",
                    "Comment je r√®gle ?",
                    "Avec quoi je peux payer ?",
                    "Les modes de paiement ?",
                    "Comment r√©gler ma prime ?",
                    "Je peux payer avec quoi ?"
                ]
            },
            # Variations sur Mobile Money
            {
                'base_keywords': ['mobile money', 'MTN', 'Moov'],
                'variations': [
                    "Mobile Money, √ßa marche ?",
                    "Je peux utiliser MTN Money ?",
                    "Moov Money c'est bon ?",
                    "Le paiement mobile ?",
                    "Payer avec mon t√©l√©phone ?",
                    "Mobile banking √ßa marche ?",
                    "Paiement via mobile ?"
                ]
            },
            # Variations sur la souscription
            {
                'base_keywords': ['souscrire', 'comment'],
                'variations': [
                    "Comment je m'inscris ?",
                    "Comment prendre une assurance ?",
                    "Je fais comment pour souscrire ?",
                    "Quelle est la d√©marche ?",
                    "Comment √ßa se passe pour s'assurer ?",
                    "Je veux m'assurer, comment faire ?",
                    "La proc√©dure pour s'assurer ?"
                ]
            },
            # Variations sur les sinistres
            {
                'base_keywords': ['sinistre', 'd√©clarer'],
                'variations': [
                    "J'ai eu un accident, je fais quoi ?",
                    "Comment signaler un sinistre ?",
                    "J'ai un probl√®me, comment d√©clarer ?",
                    "Accident, que faire ?",
                    "Sinistre, comment proc√©der ?",
                    "J'ai un p√©pin, comment faire ?",
                    "D√©g√¢ts, comment d√©clarer ?"
                ]
            },
            # Variations sur les attestations
            {
                'base_keywords': ['attestation', 'valide'],
                'variations': [
                    "Mon attestation √©lectronique est valable ?",
                    "La police accepte l'e-attestation ?",
                    "Attestation num√©rique, c'est bon ?",
                    "Mon attestation sur le t√©l√©phone, √ßa marche ?",
                    "E-attestation, c'est l√©gal ?",
                    "Attestation d√©mat√©rialis√©e valide ?",
                    "Papiers √©lectroniques accept√©s ?"
                ]
            },
            # Variations sur le contact
            {
                'base_keywords': ['contact', 'assistance'],
                'variations': [
                    "Comment vous joindre ?",
                    "Num√©ro de t√©l√©phone ?",
                    "Je vous appelle o√π ?",
                    "Votre email ?",
                    "Comment vous contacter ?",
                    "Service client ?",
                    "Num√©ro d'assistance ?"
                ]
            }
        ]
        
        created_count = 0
        
        # G√©n√©rer des variations bas√©es sur les patterns
        for variation_group in oremi_variations:
            base_keywords = variation_group['base_keywords']
            variations = variation_group['variations']
            
            # Trouver une r√©ponse de base qui correspond
            base_entry = None
            for keyword in base_keywords:
                base_entry = KnowledgeBase.objects.filter(
                    keywords__icontains=keyword,
                    is_active=True
                ).first()
                if base_entry:
                    break
            
            if base_entry:
                for i, variation_question in enumerate(variations):
                    # Cr√©er une variation de la r√©ponse avec un style l√©g√®rement diff√©rent
                    base_answer = base_entry.answer
                    
                    # Ajouter des variations dans le ton
                    variation_prefixes = [
                        "Ah ! ",
                        "Alors, ",
                        "Eh bien, ",
                        "Bon, ",
                        "OK, ",
                        "Parfait ! ",
                        "Super question ! "
                    ]
                    
                    variation_answer = random.choice(variation_prefixes) + base_answer
                    
                    # Cr√©er l'entr√©e de variation
                    variation_entry = {
                        'category': f"{base_entry.category} - Variation {i+1}",
                        'question': variation_question,
                        'answer': variation_answer,
                        'keywords': base_entry.keywords + f", variation, {variation_question.lower()}",
                        'confidence_threshold': max(0.4, base_entry.confidence_threshold - 0.2)
                    }
                    
                    kb, created = KnowledgeBase.objects.get_or_create(
                        question=variation_entry['question'],
                        defaults=variation_entry
                    )
                    if created:
                        created_count += 1
        
        # Ajouter des questions d'√©motions sp√©cifiques
        emotion_entries = [
            {
                'category': '√âmotion - Joie',
                'question': 'Je suis trop content !',
                'answer': 'G√©nial ! üéâ √áa me fait super plaisir de voir que vous √™tes content ! C\'est exactement ce qu\'on veut chez OREMI by AFG - des clients heureux ! Qu\'est-ce qui vous rend si joyeux ? üòä',
                'keywords': 'content, joyeux, heureux, g√©nial, parfait',
                'confidence_threshold': 0.6
            },
            {
                'category': '√âmotion - Surprise',
                'question': 'Waouh, c\'est incroyable !',
                'answer': 'Oh ! √áa c\'est une belle r√©action ! üòç Qu\'est-ce qui vous surprend tant ? J\'adore quand OREMI by AFG fait cet effet-l√† ! Racontez-moi tout ! ‚ú®',
                'keywords': 'waouh, incroyable, surprenant, √©tonnant, impressionnant',
                'confidence_threshold': 0.6
            },
            {
                'category': 'Familier',
                'question': 'Wesh, √ßa va ?',
                'answer': 'Wesh ! üòÑ √áa va nickel, et toi ? Cool de te voir ici ! Qu\'est-ce qui t\'am√®ne sur OREMI today ? Je suis l√† pour t\'aider ! ü§ô',
                'keywords': 'wesh, √ßa va, familier, cool, nickel',
                'confidence_threshold': 0.7
            },
            {
                'category': 'Blague',
                'question': 'Raconte-moi une blague !',
                'answer': 'Haha ! üòÑ Alors... Pourquoi les assurances aiment OREMI by AFG ? Parce que c\'est le seul endroit o√π on peut dire "tout va bien se passer" et le penser vraiment ! üòÇ Bon, je sais, je ne suis pas humoriste, mais j\'esp√®re que √ßa vous a fait sourire ! üòä',
                'keywords': 'blague, humour, rigolo, dr√¥le, rire',
                'confidence_threshold': 0.8
            }
        ]
        
        for entry in emotion_entries:
            kb, created = KnowledgeBase.objects.get_or_create(
                question=entry['question'],
                defaults=entry
            )
            if created:
                created_count += 1
        
        self.stdout.write(
            self.style.SUCCESS(
                f'üéØ {created_count} nouvelles variations g√©n√©r√©es automatiquement !'
            )
        )
        
        total_entries = KnowledgeBase.objects.count()
        self.stdout.write(
            self.style.SUCCESS(
                f'üìä Total dans la base de connaissances: {total_entries} entr√©es'
            )
        )
